{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/matter.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "function getOffset(el) {\n  var rect = { top: 0, left: 0 };\n  while (el) {\n    rect.top += el.offsetTop || 0;\n    rect.left += el.offsetLeft || 0;\n    el = el.offsetParent;\n  }\n  return rect;\n}\n\nfunction makeWorld() {\n  // Should reappear\n  var canvas = document.getElementsByClassName('plg-note');\n  var rect = getOffset(canvas[0]);\n  rect.width = canvas[0].offsetWidth;\n  rect.height = canvas[0].offsetHeight;\n  canvas[0].style.visibility = 'visible';\n\n  /** Set up relative positions and scales **/\n  var VIEW = {};\n  VIEW.width = window.innerWidth;\n  VIEW.height = window.innerHeight;\n  VIEW.centerX = rect.width / 2;\n  VIEW.centerY = rect.height / 2;\n  VIEW.offsetX = VIEW.width / 2;\n  VIEW.offsetY = VIEW.height / 2;\n\n  // Matter.js module aliases\n  var { Engine } = Matter,\n    { Render } = Matter,\n    { Runner } = Matter,\n    { Common } = Matter,\n    { World } = Matter,\n    { Bodies } = Matter,\n    { Body } = Matter,\n    { Events } = Matter,\n    { Query } = Matter,\n    { MouseConstraint } = Matter,\n    { Mouse } = Matter;\n\n  // create engine\n  var engine = Engine.create(),\n    { world } = engine;\n\n  // create renderer\n  var render = Render.create({\n    engine: engine,\n    element: document.getElementById('debug'),\n    options: {\n      width: rect.width,\n      height: rect.height,\n      background: 'transparent', // transparent to hide\n      wireframeBackground: 'transparent', // transparent to hide\n      hasBounds: true,\n      enabled: true,\n      wireframes: true,\n      showSleeping: true,\n      showDebug: true,\n      showBroadphase: true,\n      showBounds: true,\n      showVelocity: true,\n      showCollisions: true,\n      showAxes: false,\n      showPositions: true,\n      showAngleIndicator: true,\n      showIds: true,\n      showShadows: false,\n    },\n  });\n\n  // Disable to hide debug\n  Render.run(render);\n\n  // create runner\n  var runner = Runner.create();\n  Runner.run(runner, engine);\n\n  var ceiling, wallLeft, wallRight, ground, disturber;\n\n  // add walls\n  var wallopts = {\n    isStatic: true,\n    restitution: 0.8,\n    friction: 1,\n  };\n  var groundopts = {\n    isStatic: true,\n    restitution: 0.8,\n    friction: 1,\n  };\n  World.add(world, [\n    // ground\n    (ground = Bodies.rectangle(\n      rect.width / 2,\n      rect.height + 50,\n      rect.width + 200,\n      100,\n      groundopts\n    )),\n    // walls\n    (ceiling = Bodies.rectangle(rect.width / 2, -50, rect.width + 200, 100, wallopts)), // top\n    (wallRight = Bodies.rectangle(rect.width + 50, rect.height / 2, 100, rect.height, wallopts)), // right\n    (wallLeft = Bodies.rectangle(-50, rect.height / 2, 100, rect.height, wallopts)), // left\n  ]);\n\n  var bodiesDom = $('.plg-note_item:visible');\n  var bodies = [];\n  var disturbers = [];\n  for (var i = 0, l = bodiesDom.length; i < l; i++) {\n    if (bodiesDom[i].classList.contains('item')) {\n      var body = Bodies.circle(\n        rect.width / 2 + Math.floor((Math.random() * rect.width) / 2) - rect.width / 4,\n        -50,\n        bodiesDom[i].offsetWidth / 1.65,\n        {\n          restitution: 0.5,\n          friction: 0,\n          frictionAir: 0.001,\n          frictionStatic: 0,\n          density: 1,\n          chamfer: { radius: 24 },\n        }\n      );\n    } else if (bodiesDom[i].classList.contains('button-item')) {\n      var body = Bodies.rectangle(\n        rect.width / 2 + Math.floor((Math.random() * rect.width) / 2) - rect.width / 4,\n        rect.height / 2 + Math.floor((Math.random() * rect.height) / 2) - rect.height / 4,\n        150,\n        44,\n        {\n          restitution: 0.5,\n          friction: 0,\n          frictionAir: 0.001,\n          frictionStatic: 0,\n          density: 1,\n          chamfer: { radius: 24 },\n        }\n      );\n    }\n    bodiesDom[i].id = body.id;\n    bodies.push(body);\n  }\n\n  World.add(engine.world, bodies);\n\n  engine.world.gravity.y = 1;\n\n  var mouse = Mouse.create(render.canvas),\n    mouseConstraint = MouseConstraint.create(engine, {\n      mouse: mouse,\n      constraint: {\n        stiffness: 1,\n        render: {\n          visible: false,\n        },\n        isDraggable: function (body) {\n          return body.isStatic ? false : true; // Enable dragging for non-static bodies\n        },\n      },\n    });\n\n  World.add(engine.world, mouseConstraint);\n  $('.plg-note').css('opacity', '1');\n\n  let isScrolling = false;\n\n  // Scroll event listener\n  // Scroll event listener\n  mouseConstraint.mouse.element.addEventListener('mousewheel', function () {\n    handleScrollStart();\n  });\n\n  mouseConstraint.mouse.element.addEventListener('DOMMouseScroll', function () {\n    handleScrollStart();\n  });\n\n  mouseConstraint.mouse.element.addEventListener('touchmove', function () {\n    handleScrollStart();\n  });\n\n  function handleScrollStart() {\n    isScrolling = true;\n    mouseConstraint.mouse.element.removeEventListener(\n      'mousewheel',\n      mouseConstraint.mouse.mousewheel\n    );\n    mouseConstraint.mouse.element.removeEventListener(\n      'DOMMouseScroll',\n      mouseConstraint.mouse.mousewheel\n    );\n    mouseConstraint.mouse.element.removeEventListener(\n      'touchmove',\n      mouseConstraint.mouse.mousewheel\n    );\n  }\n\n  // Mouse up / touch end event listener\n  mouseConstraint.mouse.element.addEventListener('mouseup', function () {\n    handleScrollEnd();\n  });\n\n  mouseConstraint.mouse.element.addEventListener('touchend', function () {\n    handleScrollEnd();\n  });\n\n  function handleScrollEnd() {\n    if (isScrolling) {\n      isScrolling = false;\n      mouseConstraint.mouse.element.addEventListener(\n        'mousewheel',\n        mouseConstraint.mouse.mousewheel\n      );\n      mouseConstraint.mouse.element.addEventListener(\n        'DOMMouseScroll',\n        mouseConstraint.mouse.mousewheel\n      );\n      mouseConstraint.mouse.element.addEventListener('touchmove', mouseConstraint.mouse.mousewheel);\n    }\n  }\n\n  // keep the mouse in sync with rendering\n  render.mouse = mouse;\n\n  var mouseX, mouseY, mouseXO, mouseYO, mouseXN, mouseYN;\n\n  // Hover\n  Events.on(mouseConstraint, 'mousemove', function (e) {\n    mouseX = e.mouse.absolute.x;\n    mouseY = e.mouse.absolute.y;\n    if (Query.point(bodies, { x: mouseX, y: mouseY }).length) {\n      // remove exitsing hovers\n      removeHovers();\n      // apply new hover\n      var underMouse = Query.point(bodies, { x: mouseX, y: mouseY })[0].id;\n      document.getElementById(underMouse).className += ' hover';\n      document.body.style.cursor = 'pointer';\n    } else {\n      removeHovers();\n    }\n  });\n\n  function removeHovers() {\n    var hovered = document.getElementsByClassName('hover');\n    for (var i = 0; i < hovered.length; i++) {\n      hovered[i].classList.remove('hover');\n    }\n    document.body.style.cursor = 'auto';\n  }\n\n  // Press (1)\n  Events.on(mouseConstraint, 'mousedown', function (e) {\n    mouseXO = e.mouse.absolute.x;\n    mouseYO = e.mouse.absolute.y;\n  });\n  // Press (2), part 1 and 2 checks is not end of drag\n  Events.on(mouseConstraint, 'mouseup', function (e) {\n    mouseXN = e.mouse.absolute.x;\n    mouseYN = e.mouse.absolute.y;\n    if (mouseXO == mouseXN && mouseYO == mouseYN) {\n      var clickedElement = Query.point(bodies, { x: mouseXN, y: mouseYN })[0];\n\n      if (clickedElement) {\n        var clickedElementId = clickedElement.id;\n        var clickedElementDOM = document.getElementById(clickedElementId);\n\n        if (clickedElementDOM.classList.contains('button-item')) {\n          clickedElementDOM.click();\n        }\n      }\n    }\n    removeHovers();\n  });\n\n  window.requestAnimationFrame(update);\n\n  function update() {\n    for (var i = 0, l = disturbers.length; i < l; i++) {\n      disturbers[i].force.y += (Math.round(Math.random()) * 2 - 1) * 0.5;\n      disturbers[i].force.x += (Math.round(Math.random()) * 2 - 1) * 0.5;\n    }\n\n    // strips\n    for (var i = 0, l = bodiesDom.length; i < l; i++) {\n      var bodyDom = bodiesDom[i];\n      var body = null;\n      for (var j = 0, k = bodies.length; j < k; j++) {\n        if (bodies[j].id == bodyDom.id) {\n          body = bodies[j];\n          break;\n        }\n      }\n\n      if (body === null) continue;\n\n      var rect = canvas[0].getBoundingClientRect();\n      var canvasTop = canvas[0].offsetTop;\n      var canvasLeft = canvas[0].offsetLeft;\n\n      var bodyPositionRelativeToCanvas = {\n        x: body.position.x - canvasLeft,\n        y: body.position.y - canvasTop,\n      };\n\n      bodyDom.style.transform =\n        'translate( ' +\n        (bodyPositionRelativeToCanvas.x - bodyDom.offsetWidth / 2) +\n        'px, ' +\n        (bodyPositionRelativeToCanvas.y - bodyDom.offsetHeight * 1.5 + bodyDom.offsetHeight) +\n        'px )';\n      bodyDom.style.transform += 'rotate( ' + body.angle + 'rad )';\n    }\n\n    window.requestAnimationFrame(update);\n  }\n}\n\n// Call World\nsetTimeout(() => {\n  makeWorld();\n}, 1000);\n\n// Reload page every 500ms to handle resize\nfunction debounce(func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this,\n      args = arguments;\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    }, wait);\n    if (immediate && !timeout) func.apply(context, args);\n  };\n}\n\nvar refreshWorld = debounce(function () {\n  location.reload();\n}, 500);\n\nlet width = window.innerWidth;\n\nwindow.addEventListener('resize', function () {\n  if (window.innerWidth != width) {\n    width = window.innerWidth;\n    refreshWorld();\n  }\n});\n"],
  "mappings": "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",
  "names": ["body", "i", "l", "rect"]
}
